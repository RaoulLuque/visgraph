on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  merge_group:
    types: [ checks_requested ]
  workflow_dispatch: { }

name: Continuous integration

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust: 1.68.0  # MSRV
          - rust: stable
            test_all: --all
          - rust: beta
            test_all: --all
          - rust: nightly
            test_all: --all
            bench: true
    name: Tests (Rust ${{ matrix.rust }})

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.rust }}-tests-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.rust }}-tests-
      - name: Lock MSRV-compatible dependencies
        if: matrix.rust == '1.68.0'
        env:
          CARGO_RESOLVER_INCOMPATIBLE_RUST_VERSIONS: fallback
        # Note that this uses the runner's pre-installed stable cargo
        run: |
          cargo generate-lockfile
          cargo update -p zune-jpeg --precise 0.4.14
      - id: toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: cargo build --verbose
      - name: Test
        if: matrix.rust != '1.68.0'
        run: cargo test ${{ matrix.test_all }} --verbose

      - name: Build benchmarks
        if: ${{ matrix.bench }}
        run: |
          cargo bench --verbose --no-run
          cargo bench --verbose --no-run --all-features

  examples:
    name: Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: examples-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            examples-
      - uses: dtolnay/rust-toolchain@stable
      - name: Build examples
        run: |
            cargo run --release --example graph_with_circular_layout
            cargo run --release --example graph_with_custom_labels
            cargo run --release --example graph_with_position_map
            cargo run --release --example graph_with_default_settings
            cargo run --release --example graph_with_hierarchical_layout

  check:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: lints-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            lints-
      - uses: extractions/setup-just@v3
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features --lib --bins --examples --tests -- -D warnings

      - name: Build docs
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: "-Dwarnings"